// User class

package com.oop.oop;

import jakarta.persistence.*;


import java.sql.Timestamp;

@Entity
@Table(name = "user")  // The name of the table in the database
public class User {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)  // Auto-increment for user_id
    @Column(name = "user_id")  // Maps to the 'user_id' column in the table
    private int userId;

    @Column(name = "name")
    private String username;

    @Column(name = "phone_number", unique = true)  // Unique phone_number
    private String phoneNumber;

    @Column(name = "age")
    private int age;

    @Column(name = "gender")
    @Enumerated(EnumType.STRING)  // Ensures gender is stored as a string (Male, Female, Other)
    private Gender gender;

    @Column(name = "created_at", columnDefinition = "TIMESTAMP DEFAULT CURRENT_TIMESTAMP")
    private Timestamp createdAt;

    @Column(name = "password")
    private String password;

    // Default constructor
    public User() {}

    // Constructor for creating a new User (without createdAt)
    public User(String name,String password, String phoneNumber, int age, Gender gender) {
        this.username = name;
        this.phoneNumber = phoneNumber;
        this.age = age;
        this.gender = gender;
        this.password = password;
    }

    // Getters and setters for each field
    public int getUserId() {
        return userId;
    }

    public void setUserId(int userId) {
        this.userId = userId;
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String name) {
        this.username = name;
    }

    public String getPhone_Number() {
        return phoneNumber;
    }

    public void setPhone_Number(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public Gender getGender() {
        return gender;
    }

    public void setGender(Gender gender) {
        this.gender = gender;
    }

    public Timestamp getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(Timestamp createdAt) {
        this.createdAt = createdAt;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    // Enum for gender field
    public enum Gender {
        MALE, FEMALE, OTHER
    }
}

